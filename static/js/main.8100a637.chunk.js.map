{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","store/initialStates.js","components/CreateTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","toggleShow","className","style","backgroundColor","onClick","Header","title","isTaskBarShowed","Task","task","onDelete","toggleDone","isDone","onDoubleClick","id","cursor","day","Tasks","tasks","map","initialState","CreateTask","onCreate","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","name","type","placeholder","value","onChange","target","App","setTasks","setisTaskBarShowed","prevState","Date","now","newTask","length","deletedItemId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8100a637.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nfunction Button({text, color, toggleShow}) {\r\n    return (\r\n        <div>\r\n            <button className='btn' style= {{backgroundColor: color}} onClick={toggleShow}>\r\n                {text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport Button from \"./Button\"\r\n// import PropTypes from \"prop-types\"\r\n\r\nfunction Header({title, isTaskBarShowed, toggleShow}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={isTaskBarShowed ? \"steelblue\" :\"purple\"} \r\n            text = {isTaskBarShowed ? \"Hide Create a Task Bar\":\"Show Create a Task Bar\"}\r\n            toggleShow={toggleShow}/>\r\n        </header>\r\n    )\r\n}\r\n\r\n// Header.defaultProps ={\r\n//     title : \"Task tracker as default\"\r\n// } //Bu yöntemle default değer atanabilir !\r\n\r\n// Header.propTypes = {\r\n//     title: PropTypes.string.isRequired\r\n// } bu yöntemle de propsun string olması istenebilir!\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport {FaTimes} from \"react-icons/fa\"\r\nconst Task = ({task, onDelete, toggleDone}) => {\r\n    return (\r\n        <div className={`task ${task.isDone ? \"done\" : \"\"}`} onDoubleClick={()=> toggleDone(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes style={{color: \"red\", cursor: \"pointer\"}} onClick={()=>onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","\r\nimport Task from \"./Task\"\r\n\r\n function Tasks({tasks, onDelete, toggleDone}) {\r\n  \r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} toggleDone={toggleDone}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Tasks;","export const initialState = [\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      day: \"Feb 5th at 2:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      day: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      day: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n  ];","import {useState} from 'react'\r\n\r\nfunction CreateTask({onCreate}) {\r\n    const [text, setText] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n\r\n    const handleTextChange = (e)=> setText(e.target.value)\r\n    const handleDayChange = (e)=> setDay(e.target.value)\r\n\r\n    const onSubmit= (e)=>{\r\n        e.preventDefault();\r\n        if(!text || !day){\r\n            alert(\"Please fill both fields!\")\r\n        }\r\n        onCreate({text, day, isDone: false});\r\n        setDay(\"\");\r\n        setText(\"\")\r\n    }\r\n    \r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a task name\"\r\n            // required\r\n            value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"day\">Day & Time</label>\r\n          <input\r\n            id=\"day\"\r\n            name=\"day\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a day and time\"\r\n            // required\r\n            value={day}\r\n            onChange={handleDayChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default CreateTask;\r\n","import './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from \"react\";\nimport { initialState } from \"./store/initialStates\";\nimport CreateTask from './components/CreateTask';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const[isTaskBarShowed, setisTaskBarShowed]=useState(false)\n\n  //create a task\nconst onCreate = (task) => {\n  const id = Date.now();\n  const newTask = {id, ...task}\n  setTasks((prevState)=> [...prevState, newTask])\n}\n\n  //delete a task\nconst onDelete = (deletedItemId)=> setTasks(tasks.filter((task)=> task.id !== deletedItemId))\n\n  //toggle done\nconst toggleDone = (id)=>{\n  setTasks(\n    tasks.map((task)=> \n    task.id=== id ? {...task, isDone: !task.isDone} : task)\n  )\n}\n\n  //toogle show and toidentifier\n  const toggleShow = ()=> setisTaskBarShowed(prevState => !prevState)\n  return (\n    <div className=\"container\">\n      <Header title = {\"Task Tracker\"} isTaskBarShowed={isTaskBarShowed} toggleShow={toggleShow}/>\n     { isTaskBarShowed && <CreateTask onCreate={onCreate}/>}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks} onDelete = {onDelete} toggleDone={toggleDone}/>\n      ):(\n      <p>No Task to show</p>\n      )}\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}